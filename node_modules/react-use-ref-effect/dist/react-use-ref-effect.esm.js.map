{"version":3,"file":"react-use-ref-effect.esm.js","sources":["../src/index.tsx"],"sourcesContent":["import { useDebugValue, useEffect, useState } from 'react';\n\n// internalRef is used as a reference and therefore save to be used inside an effect\n/* eslint-disable react-hooks/exhaustive-deps */\n\n// the `process.env.NODE_ENV !== 'production'` condition is resolved by the build tool\n/* eslint-disable react-hooks/rules-of-hooks */\n\nconst noop: (...args: any[]) => any = () => {};\n\n/**\n * `useRefEffect` returns a mutable ref object to be connected with a DOM Node.\n *\n * The returned object will persist for the full lifetime of the component.\n * Accepts a function that contains imperative, possibly effectful code.\n *\n * @param effect Imperative function that can return a cleanup function\n * @param deps If present, effect will only activate if the ref or the values in the list change.\n */\nexport const useRefEffect = <T extends unknown>(\n  effect: (element: T) => void | (() => void),\n  dependencies?: any[]\n): React.RefCallback<T> & React.MutableRefObject<T | null> => {\n  // Use the initial state as mutable reference\n  const internalRef = useState(() => {\n    let currentValue = null as T | null;\n    let cleanupPreviousEffect = noop as () => void;\n    let currentDeps: any[] | undefined;\n    /**\n     * React.RefCallback\n     */\n    let setRefValue = (newElement: T | null) => {\n      // Only execute if dependencies or element changed:\n      if (\n        internalRef.dependencies_ !== currentDeps ||\n        currentValue !== newElement\n      ) {\n        currentValue = newElement;\n        currentDeps = internalRef.dependencies_;\n        internalRef.cleanup_();\n        if (newElement) {\n          cleanupPreviousEffect = internalRef.effect_(newElement) || noop;\n        }\n      }\n    };\n    return {\n      /** Execute the effects cleanup function */\n      cleanup_: () => {\n        cleanupPreviousEffect();\n        cleanupPreviousEffect = noop;\n      },\n      ref_: Object.defineProperty(setRefValue, 'current', {\n        get: () => currentValue,\n        set: setRefValue,\n      }),\n    } as {\n      cleanup_: () => void;\n      ref_: React.RefCallback<T> & React.MutableRefObject<T | null>;\n      // Those two properties will be set immediately after initialisation\n      effect_: typeof effect;\n      dependencies_: typeof dependencies;\n    };\n  })[0];\n\n  // Show the current ref value in development\n  // in react dev tools\n  if (process.env.NODE_ENV !== 'production') {\n    useDebugValue(internalRef.ref_.current);\n  }\n\n  // Keep a ref to the latest callback\n  internalRef.effect_ = effect;\n\n  useEffect(\n    () => {\n      // Run effect if dependencies change\n      internalRef.ref_(internalRef.ref_.current);\n      return () => {\n        if (internalRef.dependencies_ === dependencies) {\n          internalRef.cleanup_();\n        }\n      };\n    }, // Keep a ref to the latest dependencies\n    (internalRef.dependencies_ = dependencies)\n  );\n\n  return internalRef.ref_;\n};\n"],"names":["noop","useRefEffect","effect","dependencies","internalRef","useState","currentValue","cleanupPreviousEffect","currentDeps","setRefValue","newElement","dependencies_","cleanup_","effect_","ref_","Object","defineProperty","get","set","process","env","NODE_ENV","useDebugValue","current","useEffect"],"mappings":";;AAGA;AAEA;;AACA;;AAEA,MAAMA,IAAI,GAA4B,QAAtC;AAEA;;;;;;;;;;;MASaC,YAAY,GAAG,CAC1BC,MAD0B,EAE1BC,YAF0B;AAI1B;AACA,QAAMC,WAAW,GAAGC,QAAQ,CAAC;AAC3B,QAAIC,YAAY,GAAG,IAAnB;AACA,QAAIC,qBAAqB,GAAGP,IAA5B;AACA,QAAIQ,WAAJ;AACA;;;;AAGA,QAAIC,WAAW,GAAIC,UAAD;AAChB;AACA,UACEN,WAAW,CAACO,aAAZ,KAA8BH,WAA9B,IACAF,YAAY,KAAKI,UAFnB,EAGE;AACAJ,QAAAA,YAAY,GAAGI,UAAf;AACAF,QAAAA,WAAW,GAAGJ,WAAW,CAACO,aAA1B;AACAP,QAAAA,WAAW,CAACQ,QAAZ;;AACA,YAAIF,UAAJ,EAAgB;AACdH,UAAAA,qBAAqB,GAAGH,WAAW,CAACS,OAAZ,CAAoBH,UAApB,KAAmCV,IAA3D;AACD;AACF;AACF,KAbD;;AAcA,WAAO;AACL;AACAY,MAAAA,QAAQ,EAAE;AACRL,QAAAA,qBAAqB;AACrBA,QAAAA,qBAAqB,GAAGP,IAAxB;AACD,OALI;AAMLc,MAAAA,IAAI,EAAEC,MAAM,CAACC,cAAP,CAAsBP,WAAtB,EAAmC,SAAnC,EAA8C;AAClDQ,QAAAA,GAAG,EAAE,MAAMX,YADuC;AAElDY,QAAAA,GAAG,EAAET;AAF6C,OAA9C;AAND,KAAP;AAiBD,GAtC2B,CAAR,CAsCjB,CAtCiB,CAApB;AAyCA;;AACA,MAAIU,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,IAAAA,aAAa,CAAClB,WAAW,CAACU,IAAZ,CAAiBS,OAAlB,CAAb;AACD;;;AAGDnB,EAAAA,WAAW,CAACS,OAAZ,GAAsBX,MAAtB;AAEAsB,EAAAA,SAAS,CACP;AACE;AACApB,IAAAA,WAAW,CAACU,IAAZ,CAAiBV,WAAW,CAACU,IAAZ,CAAiBS,OAAlC;AACA,WAAO;AACL,UAAInB,WAAW,CAACO,aAAZ,KAA8BR,YAAlC,EAAgD;AAC9CC,QAAAA,WAAW,CAACQ,QAAZ;AACD;AACF,KAJD;AAKD,GATM;AAUNR,EAAAA,WAAW,CAACO,aAAZ,GAA4BR,YAVtB,CAAT;AAaA,SAAOC,WAAW,CAACU,IAAnB;AACD;;;;"}